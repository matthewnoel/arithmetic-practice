{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../src/components/Selector.svelte","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte-confetti/dist/Confetti.svelte","../../src/components/QuestionModal.svelte","../../src/components/ThemeToggle.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","<script>\n\timport { createEventDispatcher } from \"svelte\";\n\n\tconst dispatch = createEventDispatcher();\n\tconst handleFormSubmission = () => {\n\t\tconst id = selected.id;\n\t\tconst config = {\n\t\t\tfirstTermMinimumDigits: first_min_value,\n\t\t\tfirstTermMaximumDigits: first_max_value,\n\t\t\tsecondTermMinimumDigits: second_min_value,\n\t\t\tsecondTermMaximumDigits: second_max_value,\n\t\t\tallowNegativeAnswers: allow_negative_answers,\n\t\t};\n\t\tdispatch(\"message\", {\n\t\t\tid,\n\t\t\tconfig,\n\t\t});\n\t};\n\n\tlet options = [\n\t\t{ id: 1, text: \"Addition\" },\n\t\t{ id: 2, text: \"Subtraction\" },\n\t\t{ id: 3, text: \"Multiplication\" },\n\t\t{ id: 4, text: \"Division\" },\n\t];\n\tlet selected;\n\tlet first_min_value = 1;\n\tlet first_min_min = 1;\n\tlet first_min_max = 6;\n\tlet first_max_value = 1;\n\tlet first_max_min = 1;\n\tlet first_max_max = 6;\n\tlet second_min_value = 1;\n\tlet second_min_min = 1;\n\tlet second_min_max = 6;\n\tlet second_max_value = 1;\n\tlet second_max_min = 1;\n\tlet second_max_max = 6;\n\tlet allow_negative_answers = false;\n\n\tconst handleFirstMinChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value > first_max_min && new_value > first_max_value) {\n\t\t\tfirst_max_value = new_value;\n\t\t}\n\t\tfirst_max_min = new_value;\n\t};\n\tconst handleFirstMaxChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value < first_min_max && new_value < first_min_value) {\n\t\t\tfirst_min_value = new_value;\n\t\t}\n\t\tfirst_min_max = new_value;\n\t};\n\tconst handleSecondMinChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value > second_max_min && new_value > second_max_value) {\n\t\t\tsecond_max_value = new_value;\n\t\t}\n\t\tsecond_max_min = new_value;\n\t};\n\tconst handleSecondMaxChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value < second_min_max && new_value < second_min_value) {\n\t\t\tsecond_min_value = new_value;\n\t\t}\n\t\tsecond_min_max = new_value;\n\t};\n</script>\n\n<form on:submit|preventDefault={handleFormSubmission}>\n\t<label for=\"type\">Problem Type</label>\n\t<select\n\t\tname=\"type\"\n\t\tid=\"type\"\n\t\tbind:value={selected}\n\t>\n\t\t{#each options as option}\n\t\t\t<option value={option}>\n\t\t\t\t{option.text}\n\t\t\t</option>\n\t\t{/each}\n\t</select>\n\t{#if [1, 2, 3, 4].includes(selected?.id)}\n\t\t<label for=\"first-min\"\n\t\t\t>Minimum Digits In First Term ({first_min_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"first-min\"\n\t\t\tid=\"first-min\"\n\t\t\tmin={first_min_min}\n\t\t\tmax={first_min_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={first_min_value}\n\t\t\ton:change={handleFirstMinChange}\n\t\t\tdisabled={first_min_min === first_min_max}\n\t\t/>\n\t\t<label for=\"first-max\"\n\t\t\t>Maximum Digits In First Term ({first_max_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"first-max\"\n\t\t\tid=\"first-max\"\n\t\t\tmin={first_max_min}\n\t\t\tmax={first_max_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={first_max_value}\n\t\t\ton:change={handleFirstMaxChange}\n\t\t\tdisabled={first_max_min === first_max_max}\n\t\t/>\n\t\t<label for=\"second-min\"\n\t\t\t>Minimum Digits In Second Term ({second_min_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"second-min\"\n\t\t\tid=\"second-min\"\n\t\t\tmin={second_min_min}\n\t\t\tmax={second_min_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={second_min_value}\n\t\t\ton:change={handleSecondMinChange}\n\t\t\tdisabled={second_min_min === second_min_max}\n\t\t/>\n\t\t<label for=\"second-max\"\n\t\t\t>Maximum Digits In Second Term ({second_max_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"second-max\"\n\t\t\tid=\"second-max\"\n\t\t\tmin={second_max_min}\n\t\t\tmax={second_max_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={second_max_value}\n\t\t\ton:change={handleSecondMaxChange}\n\t\t\tdisabled={second_max_min === second_max_max}\n\t\t/>\n\t{/if}\n\t{#if selected?.id === 2}\n\t\t<label for=\"allow-negative-answers\">Allow Negative Answers</label>\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\tname=\"allow-negative-answers\"\n\t\t\tid=\"allow-negative-answers\"\n\t\t\tbind:checked={allow_negative_answers}\n\t\t/>\n\t{/if}\n\t<button disabled={!selected} type=\"submit\">Practice</button>\n</form>\n\n<style>\n\tform {\n\t\ttext-align: center;\n\t\tdisplay: inline-block;\n\t\tborder: 1px solid black;\n\t\tborder-radius: 0.5em;\n\t\tmargin: 0.5em;\n\t\tpadding: 0.5em;\n\t}\n\n\tinput,\n\tselect {\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t}\n</style>\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.7';\nexport const PUBLIC_VERSION = '4';\n","<script>\r\n  import { onMount } from \"svelte\"\r\n\r\n  export let size = 10\r\n  export let x = [-0.5, 0.5]\r\n  export let y = [0.25, 1]\r\n  export let duration = 2000\r\n  export let infinite = false\r\n  export let delay = [0, 50]\r\n  export let colorRange = [0, 360]\r\n  export let colorArray = []\r\n  export let amount = 50\r\n  export let iterationCount = 1\r\n  export let fallDistance = \"100px\"\r\n  export let rounded = false\r\n  export let cone = false\r\n  export let noGravity = false\r\n  export let xSpread = 0.15\r\n  export let destroyOnComplete = true\r\n  export let disableForReducedMotion = false\r\n\r\n  let complete = false\r\n\r\n  onMount(() => {\r\n    if (!destroyOnComplete || infinite || iterationCount == \"infinite\") return\r\n\r\n    setTimeout(() => complete = true, (duration + delay[1]) * iterationCount)\r\n  })\r\n\r\n  function randomBetween(min, max) {\r\n    return Math.random() * (max - min) + min\r\n  }\r\n\r\n  function getColor() {\r\n    if (colorArray.length) return colorArray[Math.round(Math.random() * (colorArray.length - 1))]\r\n    else return `hsl(${Math.round(randomBetween(colorRange[0], colorRange[1]))}, 75%, 50%)`\r\n  }\r\n</script>\r\n\r\n{#if !complete}\r\n  <div class=\"confetti-holder\" class:rounded class:cone class:no-gravity={noGravity} class:reduced-motion={disableForReducedMotion}>\r\n    {#each { length: amount } as _}\r\n      <div\r\n        class=\"confetti\"\r\n        style=\"\r\n        --fall-distance: {fallDistance};\r\n        --size: {size}px;\r\n        --color: {getColor()};\r\n        --skew: {randomBetween(-45, 45)}deg,{randomBetween(-45, 45)}deg;\r\n        --rotation-xyz: {randomBetween(-10, 10)}, {randomBetween(-10, 10)}, {randomBetween(-10, 10)};\r\n        --rotation-deg: {randomBetween(0, 360)}deg;\r\n        --translate-y-multiplier: {randomBetween(y[0], y[1])};\r\n        --translate-x-multiplier: {randomBetween(x[0], x[1])};\r\n        --scale: {0.1 * randomBetween(2, 10)};\r\n        --transition-duration: {infinite ? `calc(${duration}ms * var(--scale))` : `${duration}ms`};\r\n        --transition-delay: {randomBetween(delay[0], delay[1])}ms;\r\n        --transition-iteration-count: {infinite ? 'infinite' : iterationCount};\r\n        --x-spread: {(1 - xSpread)}\" />\r\n    {/each}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .confetti-holder {\r\n    position: relative;\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: skew(var(--skew)) rotate3d(var(--full-rotation));\r\n    }\r\n\r\n    100% {\r\n      transform: skew(var(--skew)) rotate3d(var(--rotation-xyz), calc(var(--rotation-deg) + 360deg));\r\n    }\r\n  }\r\n\r\n  @keyframes translate {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n\r\n    8% {\r\n      transform: translateY(calc(var(--translate-y) * 0.95)) translateX(calc(var(--translate-x) * (var(--x-spread) * 0.9)));\r\n      opacity: 1;\r\n    }\r\n\r\n    12% {\r\n      transform: translateY(var(--translate-y)) translateX(calc(var(--translate-x) * (var(--x-spread) * 0.95)));\r\n      opacity: 1;\r\n    }\r\n\r\n    16% {\r\n      transform: translateY(var(--translate-y)) translateX(calc(var(--translate-x) * var(--x-spread)));\r\n      opacity: 1;\r\n    }\r\n\r\n    100% {\r\n      transform: translateY(calc(var(--translate-y) + var(--fall-distance))) translateX(var(--translate-x));\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  @keyframes no-gravity-translate {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n\r\n    100% {\r\n      transform: translateY(var(--translate-y)) translateX(var(--translate-x));\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .confetti {\r\n    --translate-y: calc(-200px * var(--translate-y-multiplier));\r\n    --translate-x: calc(200px * var(--translate-x-multiplier));\r\n    position: absolute;\r\n    height: calc(var(--size) * var(--scale));\r\n    width: calc(var(--size) * var(--scale));\r\n    animation: translate var(--transition-duration) var(--transition-delay) var(--transition-iteration-count) linear;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .confetti::before {\r\n    --full-rotation: var(--rotation-xyz), var(--rotation-deg);\r\n    content: '';\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: var(--color);\r\n    background-size: contain;\r\n    transform: skew(var(--skew)) rotate3d(var(--full-rotation));\r\n    animation: rotate var(--transition-duration) var(--transition-delay) var(--transition-iteration-count) linear;\r\n  }\r\n\r\n  .rounded .confetti::before {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .cone .confetti {\r\n    --translate-x: calc(200px * var(--translate-y-multiplier) * var(--translate-x-multiplier));\r\n  }\r\n\r\n  .no-gravity .confetti {\r\n    animation-name: no-gravity-translate;\r\n    animation-timing-function: ease-out;\r\n  }\r\n\r\n  @media (prefers-reduced-motion) {\r\n    .reduced-motion .confetti,\r\n    .reduced-motion .confetti::before {\r\n      animation: none;\r\n    }\r\n  }\r\n</style>\r\n","<script>\n    import { tick } from \"svelte\";\n    import { Confetti } from \"svelte-confetti\";\n\n    export let selection;\n    export let config;\n\n    const MAX_PROBLEM_RETRY_COUNT = 10;\n\n    const getRandomInt = (inclusiveMin, inclusiveMax) => {\n        inclusiveMin = Math.ceil(inclusiveMin);\n        inclusiveMax = Math.floor(inclusiveMax);\n        return Math.floor(\n            Math.random() * (inclusiveMax - inclusiveMin + 1) + inclusiveMin,\n        );\n    };\n\n    const getProblem = () => {\n        let newValidator = validator;\n        let newProblem = problem;\n        let i = 0;\n\n        while (problem === newProblem && i < MAX_PROBLEM_RETRY_COUNT) {\n            i++;\n            switch (selection) {\n                case 1:\n                    [newValidator, newProblem] = getAdditionProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                    );\n                    break;\n                case 2:\n                    [newValidator, newProblem] = getSubtractionProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                        config.allowNegativeAnswers,\n                    );\n                    break;\n                case 3:\n                    [newValidator, newProblem] = getMultiplicationProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                    );\n                    break;\n                case 4:\n                    [newValidator, newProblem] = getDivisionProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                    );\n                    break;\n                default:\n                    console.log(\"unknown selection\");\n                    break;\n            }\n        }\n\n        validator = newValidator;\n        problem = newProblem;\n    };\n\n    const getTerm = (minimumDigits, maximumDigits) => {\n        const digitCount = getRandomInt(minimumDigits, maximumDigits);\n        return getRandomInt(\n            Math.pow(10, digitCount - 1),\n            Math.pow(10, digitCount) - 1,\n        );\n    };\n\n    const getAdditionProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n    ) => {\n        const term1 = getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        const term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n        return [(guess) => guess === term1 + term2, `${term1} + ${term2} =`];\n    };\n\n    const getSubtractionProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n        allowNegativeAnswers,\n    ) => {\n        let term1 = getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        let term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n        if (!allowNegativeAnswers) {\n            [term1, term2] = [Math.max(term1, term2), Math.min(term1, term2)];\n        }\n        return [(guess) => guess === term1 - term2, `${term1} - ${term2} =`];\n    };\n\n    const getMultiplicationProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n    ) => {\n        const term1 = getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        const term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n        return [(guess) => guess === term1 * term2, `${term1} × ${term2} =`];\n    };\n\n    const getDivisionProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n    ) => {\n        let term1 = getTerm(\n            firstTermMinimumDigits,\n            firstTermMaximumDigits,\n        );\n        const potentialSecondTerms = [];\n\n        for (\n            let i = Math.pow(10, secondTermMinimumDigits - 1);\n            i < Math.pow(10, secondTermMaximumDigits) - 1;\n            i++\n        ) {\n            if (term1 % i === 0) potentialSecondTerms.push(i);\n        }\n\n        let term2;\n        if (potentialSecondTerms.length > 0) {\n            term2 = potentialSecondTerms[Math.floor(Math.random() * potentialSecondTerms.length)];\n        } else {\n            // No divisors exist for this dividend such that the quotient is an integer.\n            // Intead return a problem where the divisor's digit requirement is satisfied\n            // and the quotient adopts the digit requirements from the first term.\n            term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n            term1 = term2 * getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        }\n        return [(guess) => guess === term1 / term2, `${term1} ÷ ${term2} =`];\n    };\n\n    const handleCorrectAnswer = () => {\n        getProblem();\n        feedback = null;\n        value = null;\n        streak++;\n        doConfetti();\n    };\n\n    const handleIncorrectAnswer = () => {\n        feedback = `${value} isn't correct. Try again 😊`;\n        value = null;\n        streak = 0;\n    };\n\n    const handleFormSubmission = () =>\n        validator(value) ? handleCorrectAnswer() : handleIncorrectAnswer();\n\n    const doConfetti = async () => {\n        showConfetti = false;\n        await tick();\n        showConfetti = true;\n    };\n\n    let problem;\n    let validator = () => false;\n    let feedback;\n    let value;\n    let showConfetti = false;\n    let streak = 0;\n\n    $: if (!problem) getProblem();\n</script>\n\n<form on:submit|preventDefault={handleFormSubmission}>\n    <label for=\"answer\">{problem}</label>\n    <input type=\"number\" name=\"answer\" id=\"answer\" bind:value />\n    <br />\n    <input type=\"submit\" value=\"Submit\" disabled={value == null} />\n    {#if showConfetti}\n        <div class=\"confetti\">\n            <Confetti />\n        </div>\n    {/if}\n    {#if feedback}\n        <p>{feedback}</p>\n    {/if}\n    {#if streak}\n        <div id=\"streak\">\n            <span>🔥{streak}</span>\n        </div>\n    {/if}\n</form>\n\n<style>\n    form {\n        text-align: center;\n    }\n\n    input[type=\"number\"] {\n        width: 4em;\n    }\n\n    #streak {\n        position: fixed;\n        top: 3em;\n        right: 3em;\n    }\n\n    .confetti {\n        pointer-events: none;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n    }\n</style>\n","<script>\n    const getTheme = ({\n        localStorageTheme,\n        systemSettingDark,\n    }) => {\n        if (localStorageTheme !== null) return localStorageTheme;\n        if (systemSettingDark.matches) return dark;\n        return light;\n    };\n    const update = (theme) => {\n        value = theme === dark ? \"🌞\" : \"🌚\";\n        document.querySelector(\"html\").setAttribute(\"data-theme\", theme);\n    };\n    const handleClick = () => {\n        const newTheme = currentThemeSetting === dark ? light : dark;\n        localStorage.setItem(\"theme\", newTheme);\n        update(newTheme);\n        currentThemeSetting = newTheme;\n    };\n\n    const light = \"light\";\n    const dark = \"dark\";\n    const localStorageTheme = localStorage.getItem(\"theme\");\n    const systemSettingDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    let currentThemeSetting = getTheme({\n        localStorageTheme,\n        systemSettingDark,\n    });\n    let value = \"🌞\";\n\n    update(currentThemeSetting);\n</script>\n\n<input\n    type=\"button\"\n    data-theme-toggle\n    aria-label={value === \"🌚\"\n        ? \"Change to dark theme.\"\n        : \"Change to light theme.\"}\n    {value}\n    on:click={handleClick}\n/>\n","<script>\n    import Selector from \"./components/Selector.svelte\";\n    import QuestionModal from \"./components/QuestionModal.svelte\";\n    import ThemeToggle from \"./components/ThemeToggle.svelte\";\n\n    const handleMessage = (event) => {\n        selection = event.detail.id;\n        config = Object.assign({}, event.detail.config);\n    };\n\n    let selection;\n    let config = {};\n</script>\n\n<div></div>\n{#if selection}\n    <QuestionModal {selection} {config} />\n    <div></div>\n{:else}\n    <Selector on:message={handleMessage} />\n    <footer>\n        <span\n            >This website is open source. The source code is <a\n                href=\"https://github.com/matthewnoel/arithmetic-practice\"\n                target=\"_blank\">available here</a\n            >. The list of third pary licenses is\n            <a\n                href=\"https://raw.githubusercontent.com/matthewnoel/arithmetic-practice/main/third-party-licenses.txt\"\n                target=\"_blank\">available here</a\n            >. You can file an\n            <a\n                href=\"https://github.com/matthewnoel/arithmetic-practice/issues/new\"\n                target=\"_blank\">issue here</a\n            >.</span\n        >\n        <span>\n            Change Theme:\n        <ThemeToggle />\n    </span>\n    </footer>\n{/if}\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","undefined","selectedIndex","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","callbacks","$$","bubbles","CustomEvent","custom_event","slice","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","Array","from","create_component","mount_component","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","filtered","targets","indexOf","flush_render_callbacks","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","$on","index","splice","$set","obj","keys","t0_value","option_1","first_min_min","input0","disabled","input0_disabled_value","first_max_max","input1","input1_disabled_value","second_min_min","input2","input2_disabled_value","second_max_max","input3","input3_disabled_value","label0","label1","label2","label3","label","includes","id","create_if_block","form","button","window","__svelte","v","dispatch","first_min_value","first_min_max","first_max_value","first_max_min","second_min_value","second_min_max","second_max_value","second_max_min","allow_negative_answers","config","firstTermMinimumDigits","firstTermMaximumDigits","secondTermMinimumDigits","secondTermMaximumDigits","allowNegativeAnswers","new_value","valueAsNumber","$$invalidate","selected_option","querySelector","select_value","checked","each_value","div","randomBetween","min","max","Math","random","size","$$props","x","y","duration","infinite","delay","colorRange","colorArray","amount","iterationCount","fallDistance","rounded","cone","noGravity","xSpread","destroyOnComplete","disableForReducedMotion","complete","setTimeout","round","span","create_if_block_2","create_if_block_1","br","current","selection","getRandomInt","inclusiveMin","inclusiveMax","ceil","floor","getProblem","newValidator","validator","newProblem","problem","getAdditionProblem","getSubtractionProblem","getMultiplicationProblem","getDivisionProblem","console","log","getTerm","minimumDigits","maximumDigits","digitCount","pow","term1","term2","guess","potentialSecondTerms","doConfetti","async","showConfetti","feedback","streak","input_aria_label_value","light","dark","theme","currentThemeSetting","localStorageTheme","systemSettingDark","matches","getTheme","localStorage","getItem","matchMedia","newTheme","setItem","footer","span0","span1","assign","body"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,8,9,10]}