{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../node_modules/svelte/src/constants.js","../../node_modules/esm-env/dev-fallback.js","../../node_modules/svelte/src/internal/shared/utils.js","../../node_modules/svelte/src/internal/client/constants.js","../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/svelte/src/internal/client/errors.js","../../node_modules/svelte/src/internal/flags/index.js","../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/svelte/src/internal/client/runtime.js","../../node_modules/svelte/src/internal/client/warnings.js","../../node_modules/svelte/src/internal/client/dev/ownership.js","../../node_modules/svelte/src/internal/client/proxy.js","../../node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/svelte/src/internal/client/dev/equality.js","../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/svelte/src/internal/client/dom/task.js","../../node_modules/svelte/src/internal/shared/errors.js","../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/svelte/src/utils.js","../../node_modules/svelte/src/internal/client/render.js","../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../node_modules/svelte/src/internal/client/dom/hydration.js","../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/select.js","../../node_modules/svelte/src/internal/client/dom/legacy/event-modifiers.js","../../node_modules/svelte/src/index-client.js","../../node_modules/svelte/src/internal/client/reactivity/store.js","../../node_modules/svelte/src/internal/client/reactivity/props.js","../../node_modules/svelte/src/legacy/legacy-client.js","../../src/components/Selector.svelte","../../node_modules/svelte-confetti/dist/Confetti.svelte","../../src/components/QuestionModal.svelte","../../src/main.js","../../src/App.svelte","../../src/components/ThemeToggle.svelte"],"sourcesContent":["import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '5.11.2';\nexport const PUBLIC_VERSION = '5';\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","const node_env = globalThis.process?.env?.NODE_ENV;\nif (!node_env) {\n\tconsole.warn('If bundling, conditions should include development or production. If not bundling, conditions or NODE_ENV should include development or production. See https://www.npmjs.com/package/esm-env for tips on setting conditions in popular bundlers and runtimes.');\n}\n\nexport default node_env && !node_env.toLowerCase().includes('prod');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","export let legacy_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tcomponent_context,\n\tactive_reaction,\n\tnew_deps,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @returns {Source<V>}\n */\nexport function source(v) {\n\treturn {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\tversion: 0\n\t};\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tsource.v = value;\n\t\tsource.version = increment_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (new_deps !== null && new_deps.includes(source)) {\n\t\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\t\tschedule_effect(active_effect);\n\t\t\t} else {\n\t\t\t\tif (untracked_writes === null) {\n\t\t\t\t\tset_untracked_writes([source]);\n\t\t\t\t} else {\n\t\t\t\t\tuntracked_writes.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\tdestroy_effect_deriveds,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { mutate, set, source } from './reactivity/sources.js';\nimport { destroy_derived, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/** @type {number} Used by sources and deriveds for handling updates to unowned deriveds */\nlet current_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_version() {\n\treturn ++current_version;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\n\t\t\tif ((flags & DISCONNECTED) !== 0) {\n\t\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t(dependencies[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !skip_reaction)\n\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t// is linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\tif (\n\t\t\t\t\tis_unowned &&\n\t\t\t\t\tactive_effect !== null &&\n\t\t\t\t\t!skip_reaction &&\n\t\t\t\t\t!dependency?.reactions?.includes(reaction)\n\t\t\t\t) {\n\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\tif (dependency.version > reaction.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean.\n\t\tif (!is_unowned) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack + new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction = !is_flushing_effect && (flags & UNOWNED) !== 0;\n\tderived_sources = null;\n\tcomponent_context = reaction.ctx;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tcomponent_context = previous_component_context;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\t\tdestroy_effect_deriveds(effect);\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.version = current_version;\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\n\t\t// If the signal is accessing the same dependencies in the same\n\t\t// order as it did last time, increment `skipped_deps`\n\t\t// rather than updating `new_deps`, which creates GC cost\n\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\tskipped_deps++;\n\t\t} else if (new_deps === null) {\n\t\t\tnew_deps = [signal];\n\t\t} else {\n\t\t\tnew_deps.push(signal);\n\t\t}\n\n\t\tif (\n\t\t\tuntracked_writes !== null &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tuntracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\tschedule_effect(active_effect);\n\t\t}\n\t} else if (is_derived && /** @type {Derived} */ (signal).deps === null) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\t\tvar target = derived;\n\n\t\twhile (parent !== null) {\n\t\t\t// Attach the derived to the nearest parent effect, if there are deriveds\n\t\t\t// in between then we also need to attach them too\n\t\t\tif ((parent.f & DERIVED) !== 0) {\n\t\t\t\tvar parent_derived = /** @type {Derived} */ (parent);\n\n\t\t\t\ttarget = parent_derived;\n\t\t\t\tparent = parent_derived.parent;\n\t\t\t} else {\n\t\t\t\tvar parent_effect = /** @type {Effect} */ (parent);\n\n\t\t\t\tif (!parent_effect.deriveds?.includes(target)) {\n\t\t\t\t\t(parent_effect.deriveds ??= []).push(target);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\tmutate(dep, null /* doesnt matter */);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmutate(signal, null /* doesnt matter */);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = active_reaction;\n\ttry {\n\t\tactive_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tactive_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(signal, d = 1) {\n\tvar value = get(signal);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(signal, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(signal, d = 1) {\n\tvar value = get(signal);\n\n\t// @ts-expect-error\n\treturn set(signal, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : \"The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value\"}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : \"Hydration failed because the initial UI does not match what was rendered on the server\"}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : \"Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\"}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}","/** @import { ProxyMetadata } from '#client' */\n/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL_METADATA } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function } from '../runtime.js';\nimport { get_prototype_of } from '../../shared/utils.js';\nimport * as w from '../warnings.js';\nimport { FILENAME } from '../../../constants.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nexport function get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.end == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any} owner\n * @param {boolean} [global]\n * @param {boolean} [skip_warning]\n */\nexport function add_owner(object, owner, global = false, skip_warning = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL_METADATA];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner[FILENAME] !== component[FILENAME] && !skip_warning) {\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n * @param {boolean} [skip_warning]\n */\nexport function add_owner_effect(get_object, Component, skip_warning = false) {\n\tuser_pre_effect(() => {\n\t\tadd_owner(get_object(), Component, false, skip_warning);\n\t});\n}\n\n/**\n * @param {ProxyMetadata | null} from\n * @param {ProxyMetadata} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function} owner\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL_METADATA]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif ('owners' in metadata && metadata.owners != null) {\n\t\t\tmetadata.owners.add(owner);\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\t\tif (ADD_OWNER in object && object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\nlet skip = false;\n\n/**\n * @param {() => any} fn\n */\nexport function skip_ownership_validation(fn) {\n\tskip = true;\n\tfn();\n\tskip = false;\n}\n\n/**\n * @param {ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tif (skip) return;\n\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original[FILENAME] !== component[FILENAME]) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\t}\n}\n","/** @import { ProxyMetadata, ProxyStateObject, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, component_context, active_effect } from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","import * as w from '../warnings.js';\nimport { get_proxied_value } from '../proxy.js';\n\nexport function init_array_prototype_warnings() {\n\tconst array_prototype = Array.prototype;\n\t// The REPL ends up here over and over, and this prevents it from adding more and more patches\n\t// of the same kind to the prototype, which would slow down everything over time.\n\t// @ts-expect-error\n\tconst cleanup = Array.__svelte_cleanup;\n\tif (cleanup) {\n\t\tcleanup();\n\t}\n\n\tconst { indexOf, lastIndexOf, includes } = array_prototype;\n\n\tarray_prototype.indexOf = function (item, from_index) {\n\t\tconst index = indexOf.call(this, item, from_index);\n\n\t\tif (index === -1) {\n\t\t\tconst test = indexOf.call(get_proxied_value(this), get_proxied_value(item), from_index);\n\n\t\t\tif (test !== -1) {\n\t\t\t\tw.state_proxy_equality_mismatch('array.indexOf(...)');\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.lastIndexOf = function (item, from_index) {\n\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\tconst index = lastIndexOf.call(this, item, from_index ?? this.length - 1);\n\n\t\tif (index === -1) {\n\t\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\t\tconst test = lastIndexOf.call(\n\t\t\t\tget_proxied_value(this),\n\t\t\t\tget_proxied_value(item),\n\t\t\t\tfrom_index ?? this.length - 1\n\t\t\t);\n\n\t\t\tif (test !== -1) {\n\t\t\t\tw.state_proxy_equality_mismatch('array.lastIndexOf(...)');\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.includes = function (item, from_index) {\n\t\tconst has = includes.call(this, item, from_index);\n\n\t\tif (!has) {\n\t\t\tconst test = includes.call(get_proxied_value(this), get_proxied_value(item), from_index);\n\n\t\t\tif (test) {\n\t\t\t\tw.state_proxy_equality_mismatch('array.includes(...)');\n\t\t\t}\n\t\t}\n\n\t\treturn has;\n\t};\n\n\t// @ts-expect-error\n\tArray.__svelte_cleanup = () => {\n\t\tarray_prototype.indexOf = indexOf;\n\t\tarray_prototype.lastIndexOf = lastIndexOf;\n\t\tarray_prototype.includes = includes;\n\t};\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function strict_equals(a, b, equal = true) {\n\t// try-catch needed because this tries to read properties of `a` and `b`,\n\t// which could be disallowed for example in a secure context\n\ttry {\n\t\tif ((a === b) !== (get_proxied_value(a) === get_proxied_value(b))) {\n\t\t\tw.state_proxy_equality_mismatch(equal ? '===' : '!==');\n\t\t}\n\t} catch {}\n\n\treturn (a === b) === equal;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function equals(a, b, equal = true) {\n\tif ((a == b) !== (get_proxied_value(a) == get_proxied_value(b))) {\n\t\tw.state_proxy_equality_mismatch(equal ? '==' : '!=');\n\t}\n\n\treturn (a == b) === equal;\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_version,\n\tset_active_effect,\n\tcomponent_context\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\n\tif (active_effect === null) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tchildren: null,\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (parent_derived !== null) {\n\t\t(parent_derived.children ??= []).push(signal);\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tvar children = derived.children;\n\n\tif (children !== null) {\n\t\tderived.children = null;\n\n\t\tfor (var i = 0; i < children.length; i += 1) {\n\t\t\tvar child = children[i];\n\t\t\tif ((child.f & DERIVED) !== 0) {\n\t\t\t\tdestroy_derived(/** @type {Derived} */ (child));\n\t\t\t} else {\n\t\t\t\tdestroy_effect(/** @type {Effect} */ (child));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.version = increment_version();\n\t}\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived(derived) {\n\tdestroy_derived_children(derived);\n\tremove_reactions(derived, 0);\n\tset_signal_status(derived, DESTROYED);\n\n\tderived.v = derived.children = derived.deps = derived.ctx = derived.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, Reaction, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcomponent_context,\n\tactive_effect,\n\tactive_reaction,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction,\n\tcapture_signals\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport * as w from '../warnings.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { destroy_derived } from './deriveds.js';\nimport { FILENAME } from '../../../constants.js';\nimport { get_location } from '../dev/location.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & EFFECT_HAS_DERIVED) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.children ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null) {\n\t\treturn false;\n\t}\n\n\t// If it's skipped, that's because we're inside an unowned\n\t// that is not being tracked by another reaction\n\treturn !skip_reaction;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn block(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_effect_deriveds(signal) {\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tdestroy_effect_deriveds(effect);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\tupdate_effect(effect);\n\t}\n\n\t// Ensure we toggle the flag after possibly updating the effect so that\n\t// each block logic can correctly operate on inert items\n\teffect.f ^= INERT;\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nexport const request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'inert',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, component_context, active_effect } from './runtime.js';\nimport { effect_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = effect_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\t\t\tmounted_components.delete(component);\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n * @param {Record<string, any>} component\n */\nexport function unmount(component) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tfn();\n\t} else if (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node) => void, flag?: boolean) => void) => void} fn\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, fn, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (/** @type {(anchor: Node) => void} */ fn, flag = true) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction } from '../../runtime.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\tblock(() => {\n\t\tvar collection = get_collection();\n\n\t\tvar array = is_array(collection)\n\t\t\t? collection\n\t\t\t: collection == null\n\t\t\t\t? []\n\t\t\t\t: array_from(collection);\n\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(hydrate_node, state, prev, null, value, key, i, render_fn, flags);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\tvar effect = /** @type {Effect} */ (active_reaction);\n\t\t\treconcile(array, state, anchor, render_fn, flags, (effect.f & INERT) !== 0, get_key);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget_collection();\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>) => void} render_fn\n * @param {number} flags\n * @param {boolean} is_inert\n * @param {(value: V, index: number) => any} get_key\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, is_inert, get_key) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>) => void} render_fn\n * @param {number} flags\n * @returns {EachItem}\n */\nfunction create_item(anchor, state, prev, next, value, key, index, render_fn, flags) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when its `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value;\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\tsetters_cache.has(node.nodeName) || customElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object'\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tif (value == null && !is_custom_element) {\n\t\t\t\tattributes[key] = null;\n\t\t\t\telement.removeAttribute(key);\n\t\t\t} else if (setters.includes(name) && (is_custom_element || typeof value !== 'string')) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\n\t\t\t\t} else {\n\t\t\t\t\tset_attribute(element, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_svg_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_mathml_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @returns {string | V}\n */\nfunction to_class(value) {\n\treturn value == null ? '' : value;\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { is_runes, untrack } from '../../../runtime.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","import { effect } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport { untrack } from '../../../runtime.js';\nimport { is } from '../../../proxy.js';\n\n/**\n * Selects the correct option(s) (depending on whether this is a multiple select)\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n * @param {boolean} [mounting]\n */\nexport function select_option(select, value, mounting) {\n\tif (select.multiple) {\n\t\treturn select_options(select, value);\n\t}\n\n\tfor (var option of select.options) {\n\t\tvar option_value = get_option_value(option);\n\t\tif (is(option_value, value)) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * Selects the correct option(s) if `value` is given,\n * and then sets up a mutation observer to sync the\n * current selection to the dom when it changes. Such\n * changes could for example occur when options are\n * inside an `#each` block.\n * @template V\n * @param {HTMLSelectElement} select\n * @param {() => V} [get_value]\n */\nexport function init_select(select, get_value) {\n\tlet mounting = true;\n\teffect(() => {\n\t\tif (get_value) {\n\t\t\tselect_option(select, untrack(get_value), mounting);\n\t\t}\n\t\tmounting = false;\n\n\t\tvar observer = new MutationObserver(() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = select.__value;\n\t\t\tselect_option(select, value);\n\t\t\t// Deliberately don't update the potential binding value,\n\t\t\t// the model should be preserved unless explicitly changed\n\t\t});\n\n\t\tobserver.observe(select, {\n\t\t\t// Listen to option element changes\n\t\t\tchildList: true,\n\t\t\tsubtree: true, // because of <optgroup>\n\t\t\t// Listen to option element value attribute changes\n\t\t\t// (doesn't get notified of select value changes,\n\t\t\t// because that property is not reflected as an attribute)\n\t\t\tattributes: true,\n\t\t\tattributeFilter: ['value']\n\t\t});\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n}\n\n/**\n * @param {HTMLSelectElement} select\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_select_value(select, get, set = get) {\n\tvar mounting = true;\n\n\tlisten_to_event_and_reset_event(select, 'change', (is_reset) => {\n\t\tvar query = is_reset ? '[selected]' : ':checked';\n\t\t/** @type {unknown} */\n\t\tvar value;\n\n\t\tif (select.multiple) {\n\t\t\tvalue = [].map.call(select.querySelectorAll(query), get_option_value);\n\t\t} else {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option =\n\t\t\t\tselect.querySelector(query) ??\n\t\t\t\t// will fall back to first non-disabled option if no option is selected\n\t\t\t\tselect.querySelector('option:not([disabled])');\n\t\t\tvalue = selected_option && get_option_value(selected_option);\n\t\t}\n\n\t\tset(value);\n\t});\n\n\t// Needs to be an effect, not a render_effect, so that in case of each loops the logic runs after the each block has updated\n\teffect(() => {\n\t\tvar value = get();\n\t\tselect_option(select, value, mounting);\n\n\t\t// Mounting and value undefined -> take selection from dom\n\t\tif (mounting && value === undefined) {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option = select.querySelector(':checked');\n\t\t\tif (selected_option !== null) {\n\t\t\t\tvalue = get_option_value(selected_option);\n\t\t\t\tset(value);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-ignore\n\t\tselect.__value = value;\n\t\tmounting = false;\n\t});\n\n\t// don't pass get_value, we already initialize it in the effect above\n\tinit_select(select);\n}\n\n/**\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n */\nfunction select_options(select, value) {\n\tfor (var option of select.options) {\n\t\t// @ts-ignore\n\t\toption.selected = ~value.indexOf(get_option_value(option));\n\t}\n}\n\n/** @param {HTMLOptionElement} option */\nfunction get_option_value(option) {\n\t// __value only exists if the <option> has a value attribute\n\tif ('__value' in option) {\n\t\treturn option.__value;\n\t} else {\n\t\treturn option.value;\n\t}\n}\n","/** @import { ActionReturn } from 'svelte/action' */\nimport { noop } from '../../../shared/utils.js';\nimport { user_pre_effect } from '../../reactivity/effects.js';\nimport { on } from '../elements/events.js';\n\n/**\n * Substitute for the `trusted` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function trusted(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tif (event.isTrusted) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `self` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function self(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\t// @ts-ignore\n\t\tif (event.target === this) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `stopPropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopPropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `once` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function once(fn) {\n\tvar ran = false;\n\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `stopImmediatePropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopImmediatePropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `preventDefault` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function preventDefault(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `passive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function passive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: true\n\t\t});\n\t});\n}\n\n/**\n * Substitute for the `nonpassive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function nonpassive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: false\n\t\t});\n\t});\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { component_context, flush_sync, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\n/**\n * Synchronously flushes any pending state changes and those that result from it.\n * @param {() => void} [fn]\n * @returns {void}\n */\nexport function flushSync(fn) {\n\tflush_sync(fn);\n}\n\nexport { hydrate, mount, unmount } from './internal/client/render.js';\n\nexport {\n\tgetContext,\n\tgetAllContexts,\n\thasContext,\n\tsetContext,\n\ttick,\n\tuntrack\n} from './internal/client/runtime.js';\n\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\tif (entry.store !== store) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {StoreReferencesContainer}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tteardown(() => {\n\t\tfor (var store_name in stores) {\n\t\t\tconst ref = stores[store_name];\n\t\t\tref.unsubscribe();\n\t\t}\n\t});\n\n\treturn stores;\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport {\n\tactive_effect,\n\tget,\n\tcaptured_signals,\n\tset_active_effect,\n\tuntrack,\n\tupdate\n} from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport {\n\tBRANCH_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tLEGACY_PROPS,\n\tROOT_EFFECT,\n\tSTATE_SYMBOL\n} from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nfunction with_parent_branch(fn) {\n\tvar effect = active_effect;\n\tvar previous_effect = active_effect;\n\n\twhile (effect !== null && (effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n\t\teffect = effect.parent;\n\t}\n\ttry {\n\t\tset_active_effect(effect);\n\t\treturn fn();\n\t} finally {\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\tget_descriptor(props, key)?.set ??\n\t\t(is_entry_props && bindable && key in props ? (v) => (props[key] = v) : undefined);\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = with_parent_branch(() =>\n\t\t\t(immutable ? derived : derived_safe_equal)(() => /** @type {V} */ (props[key]))\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = with_parent_branch(() =>\n\t\tderived(() => {\n\t\t\tvar parent_value = getter();\n\t\t\tvar child_value = get(inner_current_value);\n\n\t\t\tif (from_child) {\n\t\t\t\tfrom_child = false;\n\t\t\t\twas_from_child = true;\n\t\t\t\treturn child_value;\n\t\t\t}\n\n\t\t\twas_from_child = false;\n\t\t\treturn (inner_current_value.v = parent_value);\n\t\t})\n\t);\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, LEGACY_PROPS, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport {\n\tactive_effect,\n\tcomponent_context,\n\tdev_current_component_function,\n\tflush_sync,\n\tget,\n\tset_signal_status\n} from '../internal/client/runtime.js';\nimport { lifecycle_outside_component } from '../internal/shared/errors.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Support using the component as both a class and function during the transition period\n * @typedef  {{new (o: ComponentConstructorOptions): SvelteComponent;(...args: Parameters<Component<Record<string, any>>>): ReturnType<Component<Record<string, any>, Record<string, any>>>;}} LegacyComponentType\n */\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is incremented on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\t// Necessary to not throw \"invalid binding\" validation errors on the component side\n\t\t\t\t\tif (prop === LEGACY_PROPS) return true;\n\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tanchor: options.anchor,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flush_sync for custom element wrappers or if the user doesn't want it\n\t\tif (!options?.props?.$$host || options.sync === false) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n","<script>\n\timport { preventDefault } from 'svelte/legacy';\n\n\timport { createEventDispatcher } from \"svelte\";\n\n\tconst dispatch = createEventDispatcher();\n\tconst handleFormSubmission = () => {\n\t\tconst id = selected.id;\n\t\tconst config = {\n\t\t\tfirstTermMinimumDigits: first_min_value,\n\t\t\tfirstTermMaximumDigits: first_max_value,\n\t\t\tsecondTermMinimumDigits: second_min_value,\n\t\t\tsecondTermMaximumDigits: second_max_value,\n\t\t\tallowNegativeAnswers: allow_negative_answers,\n\t\t};\n\t\tdispatch(\"message\", {\n\t\t\tid,\n\t\t\tconfig,\n\t\t});\n\t};\n\n\tlet options = [\n\t\t{ id: 1, text: \"Addition\" },\n\t\t{ id: 2, text: \"Subtraction\" },\n\t\t{ id: 3, text: \"Multiplication\" },\n\t\t{ id: 4, text: \"Division\" },\n\t];\n\tlet selected = $state();\n\tlet first_min_value = $state(1);\n\tlet first_min_min = 1;\n\tlet first_min_max = $state(6);\n\tlet first_max_value = $state(1);\n\tlet first_max_min = $state(1);\n\tlet first_max_max = 6;\n\tlet second_min_value = $state(1);\n\tlet second_min_min = 1;\n\tlet second_min_max = $state(6);\n\tlet second_max_value = $state(1);\n\tlet second_max_min = $state(1);\n\tlet second_max_max = 6;\n\tlet allow_negative_answers = $state(false);\n\n\tconst handleFirstMinChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value > first_max_min && new_value > first_max_value) {\n\t\t\tfirst_max_value = new_value;\n\t\t}\n\t\tfirst_max_min = new_value;\n\t};\n\tconst handleFirstMaxChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value < first_min_max && new_value < first_min_value) {\n\t\t\tfirst_min_value = new_value;\n\t\t}\n\t\tfirst_min_max = new_value;\n\t};\n\tconst handleSecondMinChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value > second_max_min && new_value > second_max_value) {\n\t\t\tsecond_max_value = new_value;\n\t\t}\n\t\tsecond_max_min = new_value;\n\t};\n\tconst handleSecondMaxChange = (event) => {\n\t\tconst new_value = event.target.valueAsNumber;\n\t\tif (new_value < second_min_max && new_value < second_min_value) {\n\t\t\tsecond_min_value = new_value;\n\t\t}\n\t\tsecond_min_max = new_value;\n\t};\n</script>\n\n<form onsubmit={preventDefault(handleFormSubmission)}>\n\t<label for=\"type\">Problem Type</label>\n\t<select\n\t\tname=\"type\"\n\t\tid=\"type\"\n\t\tbind:value={selected}\n\t>\n\t\t{#each options as option}\n\t\t\t<option value={option}>\n\t\t\t\t{option.text}\n\t\t\t</option>\n\t\t{/each}\n\t</select>\n\t{#if [1, 2, 3, 4].includes(selected?.id)}\n\t\t<label for=\"first-min\"\n\t\t\t>Minimum Digits In First Term ({first_min_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"first-min\"\n\t\t\tid=\"first-min\"\n\t\t\tmin={first_min_min}\n\t\t\tmax={first_min_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={first_min_value}\n\t\t\tonchange={handleFirstMinChange}\n\t\t\tdisabled={first_min_min === first_min_max}\n\t\t/>\n\t\t<label for=\"first-max\"\n\t\t\t>Maximum Digits In First Term ({first_max_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"first-max\"\n\t\t\tid=\"first-max\"\n\t\t\tmin={first_max_min}\n\t\t\tmax={first_max_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={first_max_value}\n\t\t\tonchange={handleFirstMaxChange}\n\t\t\tdisabled={first_max_min === first_max_max}\n\t\t/>\n\t\t<label for=\"second-min\"\n\t\t\t>Minimum Digits In Second Term ({second_min_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"second-min\"\n\t\t\tid=\"second-min\"\n\t\t\tmin={second_min_min}\n\t\t\tmax={second_min_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={second_min_value}\n\t\t\tonchange={handleSecondMinChange}\n\t\t\tdisabled={second_min_min === second_min_max}\n\t\t/>\n\t\t<label for=\"second-max\"\n\t\t\t>Maximum Digits In Second Term ({second_max_value})</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"range\"\n\t\t\tname=\"second-max\"\n\t\t\tid=\"second-max\"\n\t\t\tmin={second_max_min}\n\t\t\tmax={second_max_max}\n\t\t\tstep=\"1\"\n\t\t\tbind:value={second_max_value}\n\t\t\tonchange={handleSecondMaxChange}\n\t\t\tdisabled={second_max_min === second_max_max}\n\t\t/>\n\t{/if}\n\t{#if selected?.id === 2}\n\t\t<label for=\"allow-negative-answers\">Allow Negative Answers</label>\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\tname=\"allow-negative-answers\"\n\t\t\tid=\"allow-negative-answers\"\n\t\t\tbind:checked={allow_negative_answers}\n\t\t/>\n\t{/if}\n\t<button disabled={!selected} type=\"submit\">Practice</button>\n</form>\n\n<style>\n\tform {\n\t\ttext-align: center;\n\t\tdisplay: inline-block;\n\t\tborder: 1px solid black;\n\t\tborder-radius: 0.5em;\n\t\tmargin: 0.5em;\n\t\tpadding: 0.5em;\n\t}\n\n\tinput,\n\tselect {\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t}\n</style>\n","<script>\r\n  import { onMount } from \"svelte\"\r\n\r\n  /** @type {{size?: number, x?: any, y?: any, duration?: number, infinite?: boolean, delay?: any, colorRange?: any, colorArray?: any, amount?: number, iterationCount?: number, fallDistance?: string, rounded?: boolean, cone?: boolean, noGravity?: boolean, xSpread?: number, destroyOnComplete?: boolean, disableForReducedMotion?: boolean}} */\r\n  let {\r\n    size = 10,\r\n    x = [-0.5, 0.5],\r\n    y = [0.25, 1],\r\n    duration = 2000,\r\n    infinite = false,\r\n    delay = [0, 50],\r\n    colorRange = [0, 360],\r\n    colorArray = [],\r\n    amount = 50,\r\n    iterationCount = 1,\r\n    fallDistance = \"100px\",\r\n    rounded = false,\r\n    cone = false,\r\n    noGravity = false,\r\n    xSpread = 0.15,\r\n    destroyOnComplete = true,\r\n    disableForReducedMotion = false\r\n  } = $props();\r\n\r\n  let complete = $state(false)\r\n\r\n  onMount(() => {\r\n    if (!destroyOnComplete || infinite || iterationCount == \"infinite\") return\r\n\r\n    setTimeout(() => complete = true, (duration + delay[1]) * iterationCount)\r\n  })\r\n\r\n  function randomBetween(min, max) {\r\n    return Math.random() * (max - min) + min\r\n  }\r\n\r\n  function getColor() {\r\n    if (colorArray.length) return colorArray[Math.round(Math.random() * (colorArray.length - 1))]\r\n    else return `hsl(${Math.round(randomBetween(colorRange[0], colorRange[1]))}, 75%, 50%)`\r\n  }\r\n</script>\r\n\r\n{#if !complete}\r\n  <div class=\"confetti-holder\" class:rounded class:cone class:no-gravity={noGravity} class:reduced-motion={disableForReducedMotion}>\r\n    {#each { length: amount } as _}\r\n      <div\r\n        class=\"confetti\"\r\n        style=\"\r\n        --fall-distance: {fallDistance};\r\n        --size: {size}px;\r\n        --color: {getColor()};\r\n        --skew: {randomBetween(-45, 45)}deg,{randomBetween(-45, 45)}deg;\r\n        --rotation-xyz: {randomBetween(-10, 10)}, {randomBetween(-10, 10)}, {randomBetween(-10, 10)};\r\n        --rotation-deg: {randomBetween(0, 360)}deg;\r\n        --translate-y-multiplier: {randomBetween(y[0], y[1])};\r\n        --translate-x-multiplier: {randomBetween(x[0], x[1])};\r\n        --scale: {0.1 * randomBetween(2, 10)};\r\n        --transition-duration: {infinite ? `calc(${duration}ms * var(--scale))` : `${duration}ms`};\r\n        --transition-delay: {randomBetween(delay[0], delay[1])}ms;\r\n        --transition-iteration-count: {infinite ? 'infinite' : iterationCount};\r\n        --x-spread: {(1 - xSpread)}\"></div>\r\n    {/each}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .confetti-holder {\r\n    position: relative;\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: skew(var(--skew)) rotate3d(var(--full-rotation));\r\n    }\r\n\r\n    100% {\r\n      transform: skew(var(--skew)) rotate3d(var(--rotation-xyz), calc(var(--rotation-deg) + 360deg));\r\n    }\r\n  }\r\n\r\n  @keyframes translate {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n\r\n    8% {\r\n      transform: translateY(calc(var(--translate-y) * 0.95)) translateX(calc(var(--translate-x) * (var(--x-spread) * 0.9)));\r\n      opacity: 1;\r\n    }\r\n\r\n    12% {\r\n      transform: translateY(var(--translate-y)) translateX(calc(var(--translate-x) * (var(--x-spread) * 0.95)));\r\n      opacity: 1;\r\n    }\r\n\r\n    16% {\r\n      transform: translateY(var(--translate-y)) translateX(calc(var(--translate-x) * var(--x-spread)));\r\n      opacity: 1;\r\n    }\r\n\r\n    100% {\r\n      transform: translateY(calc(var(--translate-y) + var(--fall-distance))) translateX(var(--translate-x));\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  @keyframes no-gravity-translate {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n\r\n    100% {\r\n      transform: translateY(var(--translate-y)) translateX(var(--translate-x));\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .confetti {\r\n    --translate-y: calc(-200px * var(--translate-y-multiplier));\r\n    --translate-x: calc(200px * var(--translate-x-multiplier));\r\n    position: absolute;\r\n    height: calc(var(--size) * var(--scale));\r\n    width: calc(var(--size) * var(--scale));\r\n    animation: translate var(--transition-duration) var(--transition-delay) var(--transition-iteration-count) linear;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .confetti::before {\r\n    --full-rotation: var(--rotation-xyz), var(--rotation-deg);\r\n    content: '';\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: var(--color);\r\n    background-size: contain;\r\n    transform: skew(var(--skew)) rotate3d(var(--full-rotation));\r\n    animation: rotate var(--transition-duration) var(--transition-delay) var(--transition-iteration-count) linear;\r\n  }\r\n\r\n  .rounded .confetti::before {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .cone .confetti {\r\n    --translate-x: calc(200px * var(--translate-y-multiplier) * var(--translate-x-multiplier));\r\n  }\r\n\r\n  .no-gravity .confetti {\r\n    animation-name: no-gravity-translate;\r\n    animation-timing-function: ease-out;\r\n  }\r\n\r\n  @media (prefers-reduced-motion) {\r\n    .reduced-motion .confetti,\r\n    .reduced-motion .confetti::before {\r\n      animation: none;\r\n    }\r\n  }\r\n</style>\r\n","<script>\n    import { run, preventDefault } from 'svelte/legacy';\n\n    import { tick } from \"svelte\";\n    import { Confetti } from \"svelte-confetti\";\n\n    let { selection, config } = $props();\n\n    const MAX_PROBLEM_RETRY_COUNT = 10;\n\n    const getRandomInt = (inclusiveMin, inclusiveMax) => {\n        inclusiveMin = Math.ceil(inclusiveMin);\n        inclusiveMax = Math.floor(inclusiveMax);\n        return Math.floor(\n            Math.random() * (inclusiveMax - inclusiveMin + 1) + inclusiveMin,\n        );\n    };\n\n    const getProblem = () => {\n        let newValidator = validator;\n        let newProblem = problem;\n        let i = 0;\n\n        while (problem === newProblem && i < MAX_PROBLEM_RETRY_COUNT) {\n            i++;\n            switch (selection) {\n                case 1:\n                    [newValidator, newProblem] = getAdditionProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                    );\n                    break;\n                case 2:\n                    [newValidator, newProblem] = getSubtractionProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                        config.allowNegativeAnswers,\n                    );\n                    break;\n                case 3:\n                    [newValidator, newProblem] = getMultiplicationProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                    );\n                    break;\n                case 4:\n                    [newValidator, newProblem] = getDivisionProblem(\n                        config.firstTermMinimumDigits,\n                        config.firstTermMaximumDigits,\n                        config.secondTermMinimumDigits,\n                        config.secondTermMaximumDigits,\n                    );\n                    break;\n                default:\n                    console.log(\"unknown selection\");\n                    break;\n            }\n        }\n\n        validator = newValidator;\n        problem = newProblem;\n    };\n\n    const getTerm = (minimumDigits, maximumDigits) => {\n        const digitCount = getRandomInt(minimumDigits, maximumDigits);\n        return getRandomInt(\n            Math.pow(10, digitCount - 1),\n            Math.pow(10, digitCount) - 1,\n        );\n    };\n\n    const getAdditionProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n    ) => {\n        const term1 = getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        const term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n        return [(guess) => guess === term1 + term2, `${term1} + ${term2} =`];\n    };\n\n    const getSubtractionProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n        allowNegativeAnswers,\n    ) => {\n        let term1 = getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        let term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n        if (!allowNegativeAnswers) {\n            [term1, term2] = [Math.max(term1, term2), Math.min(term1, term2)];\n        }\n        return [(guess) => guess === term1 - term2, `${term1} - ${term2} =`];\n    };\n\n    const getMultiplicationProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n    ) => {\n        const term1 = getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        const term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n        return [(guess) => guess === term1 * term2, `${term1} × ${term2} =`];\n    };\n\n    const getDivisionProblem = (\n        firstTermMinimumDigits,\n        firstTermMaximumDigits,\n        secondTermMinimumDigits,\n        secondTermMaximumDigits,\n    ) => {\n        let term1 = getTerm(\n            firstTermMinimumDigits,\n            firstTermMaximumDigits,\n        );\n        const potentialSecondTerms = [];\n\n        for (\n            let i = Math.pow(10, secondTermMinimumDigits - 1);\n            i < Math.pow(10, secondTermMaximumDigits) - 1;\n            i++\n        ) {\n            if (term1 % i === 0) potentialSecondTerms.push(i);\n        }\n\n        let term2;\n        if (potentialSecondTerms.length > 0) {\n            term2 = potentialSecondTerms[Math.floor(Math.random() * potentialSecondTerms.length)];\n        } else {\n            // No divisors exist for this dividend such that the quotient is an integer.\n            // Intead return a problem where the divisor's digit requirement is satisfied\n            // and the quotient adopts the digit requirements from the first term.\n            term2 = getTerm(secondTermMinimumDigits, secondTermMaximumDigits);\n            term1 = term2 * getTerm(firstTermMinimumDigits, firstTermMaximumDigits);\n        }\n        return [(guess) => guess === term1 / term2, `${term1} ÷ ${term2} =`];\n    };\n\n    const handleCorrectAnswer = () => {\n        getProblem();\n        feedback = null;\n        value = null;\n        streak++;\n        doConfetti();\n    };\n\n    const handleIncorrectAnswer = () => {\n        feedback = `${value} isn't correct. Try again 😊`;\n        value = null;\n        streak = 0;\n    };\n\n    const handleFormSubmission = () =>\n        validator(value) ? handleCorrectAnswer() : handleIncorrectAnswer();\n\n    const doConfetti = async () => {\n        showConfetti = false;\n        await tick();\n        showConfetti = true;\n    };\n\n    let problem = $state();\n    let validator = () => false;\n    let feedback = $state();\n    let value = $state();\n    let showConfetti = $state(false);\n    let streak = $state(0);\n\n    run(() => {\n        if (!problem) getProblem();\n    });\n</script>\n\n<form onsubmit={preventDefault(handleFormSubmission)}>\n    <label for=\"answer\">{problem}</label>\n    <input type=\"number\" name=\"answer\" id=\"answer\" bind:value />\n    <br />\n    <input type=\"submit\" value=\"Submit\" disabled={value == null} />\n    {#if showConfetti}\n        <div class=\"confetti\">\n            <Confetti />\n        </div>\n    {/if}\n    {#if feedback}\n        <p>{feedback}</p>\n    {/if}\n    {#if streak}\n        <div id=\"streak\">\n            <span>🔥{streak}</span>\n        </div>\n    {/if}\n</form>\n\n<style>\n    form {\n        text-align: center;\n    }\n\n    input[type=\"number\"] {\n        width: 4em;\n    }\n\n    #streak {\n        position: fixed;\n        top: 3em;\n        right: 3em;\n    }\n\n    .confetti {\n        pointer-events: none;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n    }\n</style>\n","import App from './App.svelte';\nimport { mount } from \"svelte\";\n\nvar app = mount(App, {\n\ttarget: document.body\n});\n\nexport default app;\n","<script>\n    import Selector from \"./components/Selector.svelte\";\n    import QuestionModal from \"./components/QuestionModal.svelte\";\n    import ThemeToggle from \"./components/ThemeToggle.svelte\";\n\n    const handleMessage = (event) => {\n        selection = event.detail.id;\n        config = Object.assign({}, event.detail.config);\n    };\n\n    let selection = $state();\n    let config = $state({});\n</script>\n\n<div></div>\n{#if selection}\n    <QuestionModal {selection} {config} />\n    <div></div>\n{:else}\n    <Selector on:message={handleMessage} />\n    <footer>\n        <span\n            >This website is open source. The source code is <a\n                href=\"https://github.com/matthewnoel/arithmetic-practice\"\n                target=\"_blank\">available here</a\n            >. The list of third pary licenses is\n            <a\n                href=\"https://raw.githubusercontent.com/matthewnoel/arithmetic-practice/main/third-party-licenses.txt\"\n                target=\"_blank\">available here</a\n            >. You can file an\n            <a\n                href=\"https://github.com/matthewnoel/arithmetic-practice/issues/new\"\n                target=\"_blank\">issue here</a\n            >.</span\n        >\n        <span>\n            Change Theme:\n        <ThemeToggle />\n    </span>\n    </footer>\n{/if}\n","<script>\n    const getTheme = ({\n        localStorageTheme,\n        systemSettingDark,\n    }) => {\n        if (localStorageTheme !== null) return localStorageTheme;\n        if (systemSettingDark.matches) return dark;\n        return light;\n    };\n    const update = (theme) => {\n        value = theme === dark ? \"🌞\" : \"🌚\";\n        document.querySelector(\"html\").setAttribute(\"data-theme\", theme);\n    };\n    const handleClick = () => {\n        const newTheme = currentThemeSetting === dark ? light : dark;\n        localStorage.setItem(\"theme\", newTheme);\n        update(newTheme);\n        currentThemeSetting = newTheme;\n    };\n\n    const light = \"light\";\n    const dark = \"dark\";\n    const localStorageTheme = localStorage.getItem(\"theme\");\n    const systemSettingDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    let currentThemeSetting = getTheme({\n        localStorageTheme,\n        systemSettingDark,\n    });\n    let value = $state(\"🌞\");\n\n    update(currentThemeSetting);\n</script>\n\n<input\n    type=\"button\"\n    data-theme-toggle\n    aria-label={value === \"🌚\"\n        ? \"Change to dark theme.\"\n        : \"Change to light theme.\"}\n    {value}\n    onclick={handleClick}\n/>\n"],"names":["window","__svelte","v","Set","add","UNINITIALIZED","Symbol","FILENAME","node_env","globalThis","process","env","NODE_ENV","console","warn","DEV","toLowerCase","includes","is_array","Array","isArray","array_from","from","define_property","Object","defineProperty","get_descriptor","getOwnPropertyDescriptor","get_descriptors","getOwnPropertyDescriptors","object_prototype","prototype","array_prototype","get_prototype_of","getPrototypeOf","BRANCH_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_TRANSPARENT","INSPECT_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","STATE_SYMBOL_METADATA","LEGACY_PROPS","LOADING_ATTR_SYMBOL","equals","value","this","safe_equals","a","b","bind_invalid_checkbox_value","error","Error","name","inspect_effects","set_inspect_effects","source","f","reactions","version","state","active_reaction","derived_sources","push","push_derived_source","mutable_source","initial_value","immutable","s","set","e.state_unsafe_mutation","internal_set","increment_version","mark_reactions","active_effect","new_deps","set_signal_status","schedule_effect","untracked_writes","set_untracked_writes","size","inspects","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","effect","check_dirtiness","update_effect","clear","signal","status","length","i","reaction","flags","bold","normal","ownership_invalid_mutation","component","owner","state_proxy_equality_mismatch","operator","boundaries","chrome_pattern","firefox_pattern","get_component","stack","entries","line","split","match","exec","file","column","get_stack","slice","entry","modules","module","end","start","widen_ownership","to","owners","parent","has_owner","metadata","has","get_owner","values","next","check_ownership","original","w.ownership_invalid_mutation","proxy","prev","sources","Map","is_proxied_array","component_context","function","Proxy","_","prop","descriptor","configurable","enumerable","writable","e.state_descriptors_fixed","get","undefined","deleteProperty","target","ls","n","Number","isInteger","update_version","receiver","exists","prop_metadata","Reflect","other_s","call","ownKeys","own_keys","filter","key","setPrototypeOf","e.state_prototype_fixed","d","get_proxied_value","$window","first_child_getter","next_sibling_getter","init_operations","element_prototype","Element","node_prototype","Node","__click","__className","__attributes","__styles","__e","Text","__t","__svelte_meta","cleanup","__svelte_cleanup","indexOf","lastIndexOf","item","from_index","index","w.state_proxy_equality_mismatch","init_array_prototype_warnings","create_text","document","createTextNode","get_first_child","node","get_next_sibling","child","is_text","first_child","fragment","first","Comment","data","sibling","count","next_sibling","derived","fn","DERIVED","parent_derived","children","ctx","deps","destroy_derived_children","destroy_derived","destroy_effect","execute_derived","prev_active_effect","set_active_effect","get_derived_parent_effect","prev_inspect_effects","e.derived_references_self","update_reaction","pop","update_derived","skip_reaction","remove_reactions","validate_effect","rune","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","create_effect","type","sync","is_root","parent_effect","deriveds","nodes_start","nodes_end","last","teardown","transitions","component_function","dev_current_component_function","e","parent_last","push_effect","render_effect","template_effect","block","RENDER_EFFECT","branch","execute_effect_teardown","previously_destroying_effect","previous_reaction","set_is_destroying_effect","set_active_reaction","destroy_effect_deriveds","destroy_effect_children","remove_dom","removed","remove","transition","stop","unlink_effect","pause_effect","callback","pause_children","run_out_transitions","remaining","check","out","local","is_global","resume_effect","resume_children","in","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","arr","run_all","lifecycle_outside_component","FLUSH_MICROTASK","handled_errors","WeakSet","is_throwing_error","scheduler_mode","last_scheduled_effect","queued_root_effects","flush_count","dev_effect_stack","skipped_deps","current_version","dependencies","is_unowned","dependency","propagate_error","current","should_rethrow_error","handle_error","previous_effect","component_stack","effect_name","current_context","filename","p","indent","test","navigator","userAgent","message","map","join","lines","new_lines","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","prev_derived_sources","previous_component_context","result","remove_reaction","new_length","start_index","previous_component_fn","destroy_block_effect_children","log_effect_stack","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","collected_effects","process_effects","flush_queued_effects","effects","process_deferred","previous_queued_root_effects","queueMicrotask","current_effect","main_loop","is_branch","is_skippable_branch","parent_sibling","flush_sync","previous_scheduler_mode","is_derived","e.state_unsafe_local_read","untrack","STATUS_MASK","props","runes","c","m","x","l","context_stack_item","component_effects","component_effect","throw_rune_error","e.rune_outside_svelte","listening_to_form_reset","without_reactive_context","listen_to_event_and_reset_event","element","event","handler","on_reset","addEventListener","__on_r","evt","Promise","resolve","then","defaultPrevented","elements","capture","all_registered_events","root_event_handles","create_event","event_name","dom","options","target_handler","handle_event_propagation","cancelBubble","startsWith","passive","body","removeEventListener","delegate","events","handler_element","owner_document","ownerDocument","path","composedPath","current_target","path_idx","handled_at","__root","at_idx","handler_idx","throw_error","other_errors","parent_element","assignedSlot","parentNode","host","delegated","apply","currentTarget","assign_nodes","template","content","is_fragment","use_import_node","has_start","html","elem","createElement","innerHTML","clone","importNode","cloneNode","append","anchor","before","PASSIVE_EVENTS","is_passive_event","set_text","text","str","nodeValue","document_listeners","mounted_components","WeakMap","if_block","elseif","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","each","get_collection","get_key","render_fn","fallback_fn","items","appendChild","fallback","was_empty","collection","array","is_inert","seen","matched","stashed","update_item","j","move","delete","link","k","create_item","to_destroy","controlled_anchor","items_map","is_controlled","parent_node","textContent","pause_effects","reconcile","dest","next_node","set_attribute","attribute","skip_warning","attributes","removeAttribute","descriptors","setters","setters_cache","nodeName","proto","element_proto","get_setters","setAttribute","toggle_class","class_name","classList","contains","bind_value","input","is_reset","e.bind_invalid_checkbox_value","defaultValue","is_numberlike_input","to_number","selectionStart","selectionEnd","Math","min","select_option","select","mounting","multiple","option","selected","get_option_value","select_options","option_value","is","selectedIndex","bind_select_value","query","querySelectorAll","selected_option","querySelector","__value","observer","MutationObserver","observe","childList","subtree","attributeFilter","disconnect","init_select","preventDefault","args","onMount","defer","context","user_effect","createEventDispatcher","active_component_context","detail","callbacks","bubbles","cancelable","CustomEvent","create_custom_event","is_store_binding","prop_value","bindable","lazy","is_store_sub","previous_is_store_binding","capture_store_binding","getter","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","legacy_parent","$$legacy","mutation","arguments","from_child","inner_current_value","current_value","with_parent_branch","parent_value","child_value","new_value","run","user_pre_effect","w.legacy_recursive_reactive_block","handleFirstMinChange","first_max_min","first_max_value","valueAsNumber","$.get","$.set","handleFirstMaxChange","first_min_max","first_min_value","handleSecondMinChange","second_max_min","second_max_value","handleSecondMaxChange","second_min_max","second_min_value","dispatch","handleFormSubmission","id","config","firstTermMinimumDigits","firstTermMaximumDigits","secondTermMinimumDigits","secondTermMaximumDigits","allowNegativeAnswers","allow_negative_answers","$.state","event_handler","$.derived","$.each","option_1","$.set_text","disabled","input_1","input_2","input_3","$.bind_value","$$value","$$render","consequent","defaultChecked","checked","Boolean","$.bind_checked","consequent_1","$.bind_select_value","$.prop","$$props","y","duration","infinite","delay","colorRange","colorArray","amount","iterationCount","fallDistance","rounded","cone","noGravity","xSpread","destroyOnComplete","disableForReducedMotion","complete","randomBetween","max","random","setTimeout","frag","createDocumentFragment","createComment","$.index","$$anchor","round","stringified_text_9","stringified_text_10","stringified_text_11","stringified_text_13","stringified_text_15","getRandomInt","inclusiveMin","inclusiveMax","ceil","floor","getProblem","newValidator","validator","newProblem","problem","getAdditionProblem","getSubtractionProblem","getMultiplicationProblem","getDivisionProblem","log","getTerm","minimumDigits","maximumDigits","digitCount","pow","term1","term2","guess","potentialSecondTerms","handleCorrectAnswer","feedback","streak","doConfetti","async","showConfetti","tick","consequent_2","app","handleMessage","selection","$.proxy","assign","update","theme","dark","light","currentThemeSetting","localStorageTheme","systemSettingDark","matches","getTheme","localStorage","getItem","matchMedia","newTheme","setItem","$.set_attribute","alternate","Component","intro","registered_events","event_handle","unmount","effect_root","anchor_node","$$events","removeChild","_mount"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40]}